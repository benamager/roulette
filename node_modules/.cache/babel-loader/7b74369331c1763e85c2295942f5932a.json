{"ast":null,"code":"var _jsxFileName = \"/Users/benjamin/Desktop/roulette/src/components/Form.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    action: \"\",\n    children: \"hej\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Form;\nexport default Form; // import Btn from \"../components/Btn\"\n// import { nanoid } from \"nanoid\"\n// import { useEffect, useState } from \"react\"\n// /** @jsxImportSource @emotion/react */\n// import { css } from \"@emotion/react\"\n// const Form = ({ fields, btnTxt }) => {\n//   const [formData, setFormData] = useState({\n//     username: \"\",\n//     balance: \"\",\n//   })\n//   const style = css`\n//     display: flex;\n//     flex-direction: column;\n//     width: 100%;\n//     gap: 1rem;\n//     & input {\n//       font-size: 1.5rem;\n//       padding: 1.5rem 0.75rem;\n//       background-color: #d9d9d9;\n//       border: none;\n//       color: #000000;\n//       &:focus {\n//         outline: none;\n//       }\n//     }\n//   `\n//   console.log(\"rerendered\")\n//   // Generating state dynammicly\n//   //   let generatedStateObject = {}\n//   //   fields.forEach((field) => {\n//   //     generatedStateObject = { ...generatedStateObject, [field.name]: \"\" }\n//   //   })\n//   // On change\n//   function handleChange(event) {\n//     const { name, value, type, checked } = event.target\n//     setFormData((prevFormData) => {\n//       return {\n//         ...prevFormData,\n//         [name]: type === \"checkbox\" ? checked : value,\n//       }\n//     })\n//   }\n//   function handleSubmit(event) {\n//     event.preventDefault()\n//     // submitToApi(formData)\n//     console.log(formData)\n//   }\n//   // Just logging everytime formData changes hehehe\n//   useEffect(() => {\n//     console.log(formData)\n//   }, [formData])\n//   //   {fields.map((field) => (\n//   //     <input\n//   //       type={field.type}\n//   //       placeholder={field.placeholder}\n//   //       key={nanoid()}\n//   //       name={field.name}\n//   //       onChange={handleChange}\n//   //     ></input>\n//   //   ))}\n//   return (\n//     <form onSubmit={handleSubmit} css={style} action=\"\">\n//       <input\n//         type=\"text\"\n//         placeholder=\"hej\"\n//         key={nanoid()}\n//         name=\"username\"\n//         onChange={handleChange}\n//         value={formData.username}\n//       ></input>\n//       <Btn text={btnTxt} />\n//     </form>\n//   )\n// }\n// export default Form\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["Form"],"sources":["/Users/benjamin/Desktop/roulette/src/components/Form.jsx"],"sourcesContent":["const Form = () => {\n  return <form action=\"\">hej</form>\n}\n\nexport default Form\n\n// import Btn from \"../components/Btn\"\n// import { nanoid } from \"nanoid\"\n// import { useEffect, useState } from \"react\"\n\n// /** @jsxImportSource @emotion/react */\n// import { css } from \"@emotion/react\"\n\n// const Form = ({ fields, btnTxt }) => {\n//   const [formData, setFormData] = useState({\n//     username: \"\",\n//     balance: \"\",\n//   })\n\n//   const style = css`\n//     display: flex;\n//     flex-direction: column;\n//     width: 100%;\n//     gap: 1rem;\n//     & input {\n//       font-size: 1.5rem;\n//       padding: 1.5rem 0.75rem;\n//       background-color: #d9d9d9;\n//       border: none;\n//       color: #000000;\n//       &:focus {\n//         outline: none;\n//       }\n//     }\n//   `\n\n//   console.log(\"rerendered\")\n\n//   // Generating state dynammicly\n//   //   let generatedStateObject = {}\n//   //   fields.forEach((field) => {\n//   //     generatedStateObject = { ...generatedStateObject, [field.name]: \"\" }\n//   //   })\n\n//   // On change\n//   function handleChange(event) {\n//     const { name, value, type, checked } = event.target\n//     setFormData((prevFormData) => {\n//       return {\n//         ...prevFormData,\n//         [name]: type === \"checkbox\" ? checked : value,\n//       }\n//     })\n//   }\n\n//   function handleSubmit(event) {\n//     event.preventDefault()\n//     // submitToApi(formData)\n//     console.log(formData)\n//   }\n\n//   // Just logging everytime formData changes hehehe\n//   useEffect(() => {\n//     console.log(formData)\n//   }, [formData])\n\n//   //   {fields.map((field) => (\n//   //     <input\n//   //       type={field.type}\n//   //       placeholder={field.placeholder}\n//   //       key={nanoid()}\n//   //       name={field.name}\n//   //       onChange={handleChange}\n//   //     ></input>\n//   //   ))}\n\n//   return (\n//     <form onSubmit={handleSubmit} css={style} action=\"\">\n//       <input\n//         type=\"text\"\n//         placeholder=\"hej\"\n//         key={nanoid()}\n//         name=\"username\"\n//         onChange={handleChange}\n//         value={formData.username}\n//       ></input>\n//       <Btn text={btnTxt} />\n//     </form>\n//   )\n// }\n\n// export default Form\n"],"mappings":";;;AAAA,MAAMA,IAAI,GAAG,MAAM;EACjB,oBAAO;IAAM,MAAM,EAAC,EAAb;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAFD;;KAAMA,I;AAIN,eAAeA,IAAf,C,CAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}