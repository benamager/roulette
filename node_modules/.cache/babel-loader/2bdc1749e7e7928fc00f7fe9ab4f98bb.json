{"ast":null,"code":"var _jsxFileName = \"/Users/benjamin/Desktop/roulette/src/components/Form.jsx\",\n    _s = $RefreshSig$();\n\nimport Btn from \"../components/Btn\";\nimport { nanoid } from \"nanoid\";\nimport { useEffect, useState } from \"react\";\n/** @jsxImportSource @emotion/react */\n\nimport { css } from \"@emotion/react\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\n\nconst Form = _ref => {\n  _s();\n\n  let {\n    fields,\n    btnTxt\n  } = _ref;\n  const [formData, setFormData] = useState({\n    username: \"\",\n    balance: \"\"\n  });\n  const style = css`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    gap: 1rem;\n    & input {\n      font-size: 1.5rem;\n      padding: 1.5rem 0.75rem;\n      background-color: #d9d9d9;\n      border: none;\n      color: #000000;\n      &:focus {\n        outline: none;\n      }\n    }\n  `;\n  console.log(\"rerendered\"); // Generating state dynammicly\n  //   let generatedStateObject = {}\n  //   fields.forEach((field) => {\n  //     generatedStateObject = { ...generatedStateObject, [field.name]: \"\" }\n  //   })\n  // On change\n\n  function handleChange(event) {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = event.target;\n    setFormData(prevFormData => {\n      return { ...prevFormData,\n        [name]: type === \"checkbox\" ? checked : value\n      };\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault(); // submitToApi(formData)\n\n    console.log(formData);\n  } // Just logging everytime formData changes hehehe\n\n\n  useEffect(() => {\n    console.log(formData);\n  }, [formData]); //   {fields.map((field) => (\n  //     <input\n  //       type={field.type}\n  //       placeholder={field.placeholder}\n  //       key={nanoid()}\n  //       name={field.name}\n  //       onChange={handleChange}\n  //     ></input>\n  //   ))}\n\n  return _jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    css: style,\n    action: \"\",\n    children: [_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"hej\",\n      name: \"username\",\n      onChange: handleChange,\n      value: formData.username\n    }, nanoid(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), _jsxDEV(Btn, {\n      text: btnTxt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"aC0Zz3hgr8z4mMT+tqDize+5gIo=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["Btn","nanoid","useEffect","useState","css","Form","fields","btnTxt","formData","setFormData","username","balance","style","console","log","handleChange","event","name","value","type","checked","target","prevFormData","handleSubmit","preventDefault"],"sources":["/Users/benjamin/Desktop/roulette/src/components/Form.jsx"],"sourcesContent":["import Btn from \"../components/Btn\"\nimport { nanoid } from \"nanoid\"\nimport { useEffect, useState } from \"react\"\n\n/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\"\n\nconst Form = ({ fields, btnTxt }) => {\n  const [formData, setFormData] = useState({\n    username: \"\",\n    balance: \"\",\n  })\n\n  const style = css`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    gap: 1rem;\n    & input {\n      font-size: 1.5rem;\n      padding: 1.5rem 0.75rem;\n      background-color: #d9d9d9;\n      border: none;\n      color: #000000;\n      &:focus {\n        outline: none;\n      }\n    }\n  `\n\n  console.log(\"rerendered\")\n\n  // Generating state dynammicly\n  //   let generatedStateObject = {}\n  //   fields.forEach((field) => {\n  //     generatedStateObject = { ...generatedStateObject, [field.name]: \"\" }\n  //   })\n\n  // On change\n  function handleChange(event) {\n    const { name, value, type, checked } = event.target\n    setFormData((prevFormData) => {\n      return {\n        ...prevFormData,\n        [name]: type === \"checkbox\" ? checked : value,\n      }\n    })\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault()\n    // submitToApi(formData)\n    console.log(formData)\n  }\n\n  // Just logging everytime formData changes hehehe\n  useEffect(() => {\n    console.log(formData)\n  }, [formData])\n\n  //   {fields.map((field) => (\n  //     <input\n  //       type={field.type}\n  //       placeholder={field.placeholder}\n  //       key={nanoid()}\n  //       name={field.name}\n  //       onChange={handleChange}\n  //     ></input>\n  //   ))}\n\n  return (\n    <form onSubmit={handleSubmit} css={style} action=\"\">\n      <input\n        type=\"text\"\n        placeholder=\"hej\"\n        key={nanoid()}\n        name=\"username\"\n        onChange={handleChange}\n        value={formData.username}\n      ></input>\n      <Btn text={btnTxt} />\n    </form>\n  )\n}\n\nexport default Form\n"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,mBAAhB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA;;AACA,SAASC,GAAT,QAAoB,gBAApB;;;AAEA,MAAMC,IAAI,GAAG,QAAwB;EAAA;;EAAA,IAAvB;IAAEC,MAAF;IAAUC;EAAV,CAAuB;EACnC,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC;IACvCO,QAAQ,EAAE,EAD6B;IAEvCC,OAAO,EAAE;EAF8B,CAAD,CAAxC;EAKA,MAAMC,KAAK,GAAGR,GAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAfE;EAiBAS,OAAO,CAACC,GAAR,CAAY,YAAZ,EAvBmC,CAyBnC;EACA;EACA;EACA;EACA;EAEA;;EACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;IAC3B,MAAM;MAAEC,IAAF;MAAQC,KAAR;MAAeC,IAAf;MAAqBC;IAArB,IAAiCJ,KAAK,CAACK,MAA7C;IACAZ,WAAW,CAAEa,YAAD,IAAkB;MAC5B,OAAO,EACL,GAAGA,YADE;QAEL,CAACL,IAAD,GAAQE,IAAI,KAAK,UAAT,GAAsBC,OAAtB,GAAgCF;MAFnC,CAAP;IAID,CALU,CAAX;EAMD;;EAED,SAASK,YAAT,CAAsBP,KAAtB,EAA6B;IAC3BA,KAAK,CAACQ,cAAN,GAD2B,CAE3B;;IACAX,OAAO,CAACC,GAAR,CAAYN,QAAZ;EACD,CA9CkC,CAgDnC;;;EACAN,SAAS,CAAC,MAAM;IACdW,OAAO,CAACC,GAAR,CAAYN,QAAZ;EACD,CAFQ,EAEN,CAACA,QAAD,CAFM,CAAT,CAjDmC,CAqDnC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,OACE;IAAM,QAAQ,EAAEe,YAAhB;IAA8B,GAAG,EAAEX,KAAnC;IAA0C,MAAM,EAAC,EAAjD;IAAA,WACE;MACE,IAAI,EAAC,MADP;MAEE,WAAW,EAAC,KAFd;MAIE,IAAI,EAAC,UAJP;MAKE,QAAQ,EAAEG,YALZ;MAME,KAAK,EAAEP,QAAQ,CAACE;IANlB,GAGOT,MAAM,EAHb;MAAA;MAAA;MAAA;IAAA,QADF,EASE,QAAC,GAAD;MAAK,IAAI,EAAEM;IAAX;MAAA;MAAA;MAAA;IAAA,QATF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CA5ED;;GAAMF,I;;KAAAA,I;AA8EN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}