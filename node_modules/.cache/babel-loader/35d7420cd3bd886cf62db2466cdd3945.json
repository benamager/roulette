{"ast":null,"code":"var _jsxFileName = \"/Users/benjamin/Desktop/roulette/src/components/Roulette.jsx\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\n\nconst Roulette = () => {\n  _s();\n\n  let rouletteAmount = 136;\n  let rouletteBoxes = [];\n  const [timer, setTimer] = useState(10);\n  const [transform, setTransform] = useState(0); // Timer with cleanup\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setTimer(prevState => {\n        console.log(prevState);\n        console.log(rouletteAmount * 100);\n        let randomNumber = Math.floot(Math.random() * 10000) + 1000;\n        return prevState - 1;\n      });\n    }, 1000); // clearing interval\n\n    return () => clearInterval(timer);\n  });\n  const styles = {\n    rouletteWrapper: css`\n      width: 100%;\n      overflow: hidden;\n      position: relative;\n      &::after {\n        content: \"\";\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        width: 5px;\n        height: 100%;\n        background-color: blue;\n        opacity: 80%;\n      }\n    `,\n    info: css`\n      display: flex;\n      justify-content: space-between;\n      font-size: 25px;\n      margin-bottom: 0.5rem;\n    `,\n    rouletteBoxesContainer: css`\n      display: flex;\n      transition: all 10s;\n      transform: translateX(0);\n    `,\n    box: css`\n      min-width: 100px;\n      min-height: 100px;\n    `,\n    redBox: css`\n      background-color: red;\n    `,\n    blackBox: css`\n      background-color: black;\n    `,\n    greenBox: css`\n      background-color: green;\n    `\n  }; // Pushing boxes to array\n\n  function pushBox(color, key) {\n    rouletteBoxes = [...rouletteBoxes, _jsxDEV(\"div\", {\n      css: [styles.box, styles[color]]\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)];\n  } // Generating boxes\n\n\n  for (let i = 0; i < rouletteAmount; i++) {\n    if (i === 10) {\n      // Number even\n      pushBox(\"greenBox\", i);\n      i++;\n    } else if (i % 2 === 0) {\n      pushBox(\"redBox\", i);\n    } else {\n      // Number odd\n      pushBox(\"blackBox\", i);\n    }\n  }\n\n  return _jsxDEV(\"div\", {\n    css: styles.rouletteWrapper,\n    children: [_jsxDEV(\"div\", {\n      css: styles.info,\n      children: [_jsxDEV(\"p\", {\n        children: \"Balance = 100DKK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), _jsxDEV(\"p\", {\n        children: [\"Spinning in \", timer, \" seconds\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), _jsxDEV(\"div\", {\n      css: styles.rouletteBoxesContainer,\n      children: rouletteBoxes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Roulette, \"ZLvt8V+vTSn/Weqq4OuSk//C1Sg=\");\n\n_c = Roulette;\nexport default Roulette;\n\nvar _c;\n\n$RefreshReg$(_c, \"Roulette\");","map":{"version":3,"names":["css","useEffect","useState","Roulette","rouletteAmount","rouletteBoxes","timer","setTimer","transform","setTransform","setInterval","prevState","console","log","randomNumber","Math","floot","random","clearInterval","styles","rouletteWrapper","info","rouletteBoxesContainer","box","redBox","blackBox","greenBox","pushBox","color","key","i"],"sources":["/Users/benjamin/Desktop/roulette/src/components/Roulette.jsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\"\nimport { useEffect, useState } from \"react\"\n\nconst Roulette = () => {\n  let rouletteAmount = 136\n  let rouletteBoxes = []\n\n  const [timer, setTimer] = useState(10)\n  const [transform, setTransform] = useState(0)\n\n  // Timer with cleanup\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setTimer((prevState) => {\n        console.log(prevState)\n        console.log(rouletteAmount * 100)\n        let randomNumber = Math.floot(Math.random() * 10000) + 1000\n        return prevState - 1\n      })\n    }, 1000)\n    // clearing interval\n    return () => clearInterval(timer)\n  })\n\n  const styles = {\n    rouletteWrapper: css`\n      width: 100%;\n      overflow: hidden;\n      position: relative;\n      &::after {\n        content: \"\";\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        width: 5px;\n        height: 100%;\n        background-color: blue;\n        opacity: 80%;\n      }\n    `,\n    info: css`\n      display: flex;\n      justify-content: space-between;\n      font-size: 25px;\n      margin-bottom: 0.5rem;\n    `,\n\n    rouletteBoxesContainer: css`\n      display: flex;\n      transition: all 10s;\n      transform: translateX(0);\n    `,\n    box: css`\n      min-width: 100px;\n      min-height: 100px;\n    `,\n    redBox: css`\n      background-color: red;\n    `,\n    blackBox: css`\n      background-color: black;\n    `,\n    greenBox: css`\n      background-color: green;\n    `,\n  }\n\n  // Pushing boxes to array\n  function pushBox(color, key) {\n    rouletteBoxes = [\n      ...rouletteBoxes,\n      <div key={key} css={[styles.box, styles[color]]}></div>,\n    ]\n  }\n\n  // Generating boxes\n  for (let i = 0; i < rouletteAmount; i++) {\n    if (i === 10) {\n      // Number even\n      pushBox(\"greenBox\", i)\n      i++\n    } else if (i % 2 === 0) {\n      pushBox(\"redBox\", i)\n    } else {\n      // Number odd\n      pushBox(\"blackBox\", i)\n    }\n  }\n\n  return (\n    <div css={styles.rouletteWrapper}>\n      <div css={styles.info}>\n        <p>Balance = 100DKK</p>\n        <p>Spinning in {timer} seconds</p>\n      </div>\n      <div css={styles.rouletteBoxesContainer}>{rouletteBoxes}</div>\n    </div>\n  )\n}\n\nexport default Roulette\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}