{"ast":null,"code":"var _jsxFileName = \"/Users/benjamin/Desktop/roulette/src/components/Roulette.jsx\";\n\n/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\n\nconst Roulette = () => {\n  let rouletteAmount = 136;\n  let rouletteBoxes = [];\n  const styles = {\n    rouletteWrapper: css`\n      width: 100%;\n      overflow: hidden;\n      position: relative;\n      &::after {\n        content: \"hej\";\n        position: absolute;\n        width: 20px;\n        height: 100px;\n        background-color: blue;\n      }\n    `,\n    rouletteBoxesContainer: css`\n      display: flex;\n      transition: all 10s;\n      transform: translateX(000px);\n    `,\n    box: css`\n      min-width: 100px;\n      min-height: 100px;\n    `,\n    redBox: css`\n      background-color: red;\n    `,\n    blackBox: css`\n      background-color: black;\n    `,\n    greenBox: css`\n      background-color: green;\n    `\n  };\n  console.log(rouletteAmount * 100); // Pushing boxes to array\n\n  function pushBox(color, key) {\n    rouletteBoxes = [...rouletteBoxes, _jsxDEV(\"div\", {\n      css: [styles.box, styles[color]]\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)];\n  } // Generating boxes\n\n\n  for (let i = 0; i < rouletteAmount; i++) {\n    if (i === 10) {\n      // Number even\n      pushBox(\"greenBox\", i);\n      i++;\n    } else if (i % 2 === 0) {\n      pushBox(\"redBox\", i);\n    } else {\n      // Number odd\n      pushBox(\"blackBox\", i);\n    }\n  }\n\n  return _jsxDEV(\"div\", {\n    css: styles.rouletteWrapper,\n    children: _jsxDEV(\"div\", {\n      css: styles.rouletteBoxesContainer,\n      children: rouletteBoxes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Roulette;\nexport default Roulette;\n\nvar _c;\n\n$RefreshReg$(_c, \"Roulette\");","map":{"version":3,"names":["css","Roulette","rouletteAmount","rouletteBoxes","styles","rouletteWrapper","rouletteBoxesContainer","box","redBox","blackBox","greenBox","console","log","pushBox","color","key","i"],"sources":["/Users/benjamin/Desktop/roulette/src/components/Roulette.jsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\"\n\nconst Roulette = () => {\n  let rouletteAmount = 136\n  let rouletteBoxes = []\n\n  const styles = {\n    rouletteWrapper: css`\n      width: 100%;\n      overflow: hidden;\n      position: relative;\n      &::after {\n        content: \"hej\";\n        position: absolute;\n        width: 20px;\n        height: 100px;\n        background-color: blue;\n      }\n    `,\n    rouletteBoxesContainer: css`\n      display: flex;\n      transition: all 10s;\n      transform: translateX(000px);\n    `,\n    box: css`\n      min-width: 100px;\n      min-height: 100px;\n    `,\n    redBox: css`\n      background-color: red;\n    `,\n    blackBox: css`\n      background-color: black;\n    `,\n    greenBox: css`\n      background-color: green;\n    `,\n  }\n\n  console.log(rouletteAmount * 100)\n\n  // Pushing boxes to array\n  function pushBox(color, key) {\n    rouletteBoxes = [\n      ...rouletteBoxes,\n      <div key={key} css={[styles.box, styles[color]]}></div>,\n    ]\n  }\n\n  // Generating boxes\n  for (let i = 0; i < rouletteAmount; i++) {\n    if (i === 10) {\n      // Number even\n      pushBox(\"greenBox\", i)\n      i++\n    } else if (i % 2 === 0) {\n      pushBox(\"redBox\", i)\n    } else {\n      // Number odd\n      pushBox(\"blackBox\", i)\n    }\n  }\n\n  return (\n    <div css={styles.rouletteWrapper}>\n      <div css={styles.rouletteBoxesContainer}>{rouletteBoxes}</div>\n    </div>\n  )\n}\n\nexport default Roulette\n"],"mappings":";;AAAA;AACA,SAASA,GAAT,QAAoB,gBAApB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EACrB,IAAIC,cAAc,GAAG,GAArB;EACA,IAAIC,aAAa,GAAG,EAApB;EAEA,MAAMC,MAAM,GAAG;IACbC,eAAe,EAAEL,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAZiB;IAabM,sBAAsB,EAAEN,GAAI;AAChC;AACA;AACA;AACA,KAjBiB;IAkBbO,GAAG,EAAEP,GAAI;AACb;AACA;AACA,KArBiB;IAsBbQ,MAAM,EAAER,GAAI;AAChB;AACA,KAxBiB;IAyBbS,QAAQ,EAAET,GAAI;AAClB;AACA,KA3BiB;IA4BbU,QAAQ,EAAEV,GAAI;AAClB;AACA;EA9BiB,CAAf;EAiCAW,OAAO,CAACC,GAAR,CAAYV,cAAc,GAAG,GAA7B,EArCqB,CAuCrB;;EACA,SAASW,OAAT,CAAiBC,KAAjB,EAAwBC,GAAxB,EAA6B;IAC3BZ,aAAa,GAAG,CACd,GAAGA,aADW,EAEd;MAAe,GAAG,EAAE,CAACC,MAAM,CAACG,GAAR,EAAaH,MAAM,CAACU,KAAD,CAAnB;IAApB,GAAUC,GAAV;MAAA;MAAA;MAAA;IAAA,QAFc,CAAhB;EAID,CA7CoB,CA+CrB;;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,cAApB,EAAoCc,CAAC,EAArC,EAAyC;IACvC,IAAIA,CAAC,KAAK,EAAV,EAAc;MACZ;MACAH,OAAO,CAAC,UAAD,EAAaG,CAAb,CAAP;MACAA,CAAC;IACF,CAJD,MAIO,IAAIA,CAAC,GAAG,CAAJ,KAAU,CAAd,EAAiB;MACtBH,OAAO,CAAC,QAAD,EAAWG,CAAX,CAAP;IACD,CAFM,MAEA;MACL;MACAH,OAAO,CAAC,UAAD,EAAaG,CAAb,CAAP;IACD;EACF;;EAED,OACE;IAAK,GAAG,EAAEZ,MAAM,CAACC,eAAjB;IAAA,UACE;MAAK,GAAG,EAAED,MAAM,CAACE,sBAAjB;MAAA,UAA0CH;IAA1C;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAlED;;KAAMF,Q;AAoEN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}